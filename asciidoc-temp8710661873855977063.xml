<?xml version="1.0" encoding="UTF-8"?><?asciidoc-toc?><?asciidoc-numbered?><book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="id">
<info>
<title>Buku Saku Android</title>
<date>18 Desember 2018</date>
<author>
<personname>
<firstname>Bagus</firstname>
<othername>Aji</othername>
<surname>Santoso</surname>
</personname>
<email>lobothijau@gmail.com</email>
</author>
<authorinitials>BAS</authorinitials>
<revhistory>
<revision>
<revnumber>0.0.1</revnumber>
<date>18 Desember 2018</date>
<authorinitials>BAS</authorinitials>
</revision>
</revhistory>
</info>
<preface xml:id="_tentang_penulis">
<title>Tentang penulis</title>
<simpara>Bagus Aji Santoso adalah programmer yang baik hati. Alumni Departemen Pendidikan Ilmu Komputer, Universitas Pendidikan Indonesia.</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://bagus.me">https://bagus.me</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://twitter.com/lobothijau">https://twitter.com/lobothijau</link></simpara>
</listitem>
</itemizedlist>
</preface>
<chapter xml:id="_pendahuluan">
<title>Pendahuluan</title>
<section xml:id="_pendahuluan_2">
<title>Pendahuluan</title>
<simpara>Selamat membaca Buku Saku Android. Buku ini disusun untuk membantu programmer Android pemula untuk mengulang teori penggunaan komponen-komponen Android juga untuk programmer yang sudah tidak lagi pemula agar lebih mudah mencari potongan kode yang bisa di di <emphasis>copy-paste</emphasis> dalam proses pembuatan aplikasi Android.</simpara>
</section>
<section xml:id="_tidak_berurutan">
<title>Tidak berurutan</title>
<simpara>Topik-topik yang dibahas dibuku ini saling berdiri sendiri dan dibuat untuk tidak bergantung pada topik-topik sebelumnya. Jika komponen A yang sedang dibahas memakai komponen B, maka penjelasan komponen B hanya sebatas untuk mendukung penjelasan komponen A. Oleh karena itu buku ini tidak mesti dibaca dari halaman 1 sampai halaman terakhir. Silahkan lompat dari bab yang satu ke bab yang lainnya sesuai dengan kebutuhan.</simpara>
</section>
<section xml:id="_lisensi">
<title>Lisensi</title>
<simpara>Buku ini dipublikasikan dengan lisensi <link xlink:href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</link>. Artinya, buku ini boleh didistribusikan dan dimodifikasi untuk tujuan non komersial selama memberikan atribusi/kredit.</simpara>
<simpara>Sementara itu, untuk <emphasis>source code</emphasis> contoh yang ada di buku ini boleh dipakai untuk penggunaan pribadi maupun komersial, boleh juga didistribusikan serta dimodifikasi sesuai kebutuhan demi kemaslahatan umat manusia. Akan tetapi, tidak ada garansi apapun yang diberikan untuk setiap <emphasis>source code</emphasis> yang ditampilkan di dalam buku ini maupun yang disimpan di repositori terpisah (<link xlink:href="https://github.com/lobothijau/bukusakuandroid-code">https://github.com/lobothijau/bukusakuandroid-code</link>). Segala kerusakan yang terjadi akibat <emphasis>copy-paste source code</emphasis> yang tersedia diluar tanggung jawab penulis. Namun, penulis tetap berharap pembaca dapat memberikan umpan balik apabila terdapat kesalahan penjelasan maupun kesalahan kode sehingga bisa diperbaiki dan bisa membantu lebih banyak orang.</simpara>
</section>
<section xml:id="_kontak">
<title>Kontak</title>
<simpara>Jika pembaca menemukan menemukan kesalahan sekecil apapun, memiliki pertanyaan, atau memiliki permintaan topik yang ingin dibahas (meskipun belum tentu langsung dikabulkan), silahkan mention <link xlink:href="https://twitter.com/lobothijau">@lobothijau</link> atau kirimkan email ke lobothijau[at]gmail.com.</simpara>
</section>
<section xml:id="_unduh_pdf">
<title>Unduh PDF</title>
<simpara>Versi PDF terakhir buku ini bisa di unduh di <link xlink:href="https://github.com/lobothijau/bukusakuandroid">https://github.com/lobothijau/bukusakuandroid</link>.</simpara>
</section>
</chapter>
<chapter xml:id="_recyclerview">
<title>RecyclerView</title>
<section xml:id="_recyclerview_2">
<title>RecyclerView</title>
<simpara>RecyclerView merupakan komponen Android yang didesain untuk dapat menampilkan kumpulan data dengan performa yang lebih efisien dibandingkan ListView/GridView.</simpara>
</section>
<section xml:id="_membuat_recyclerview_sederhana">
<title>Membuat RecyclerView sederhana</title>
<simpara>Contoh aplikasi RecyclerView ini menggunakan template <emphasis role="strong">Basic Activity</emphasis>.</simpara>
<section xml:id="_menambahkan_dependensi">
<title>Menambahkan dependensi</title>
<simpara>Buka file <literal>build.gradle</literal> modul app lalu tambahkan dependensi RecyclerView di blok <literal>dependencies</literal>.</simpara>
<programlisting language="groovy" linenumbering="unnumbered">dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0' <co xml:id="CO1-1"/>
    implementation 'com.squareup.picasso:picasso:2.71828' <co xml:id="CO1-2"/>
}</programlisting>
<calloutlist>
<callout arearefs="CO1-1">
<para>Pastikan nomor versi sama dengan <literal>appcompat-v7</literal></para>
</callout>
<callout arearefs="CO1-2">
<para>Library Picasso dipakai untuk menampilkan gambar dari sebuah URL</para>
</callout>
</calloutlist>
</section>
<section xml:id="_menambahkan_komponen_recyclerview_di_layout">
<title>Menambahkan komponen RecyclerView di layout</title>
<simpara>Tambahkan komponen RecyclerView ke dalam layout Activity atau Fragment di mana kita ingin menampilkannya. Karena contoh ini menggunakan Basic Activity, maka tambahkan komponen RecyclerView di file <literal>content_main.xml</literal>.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context=".MainActivity"
    tools:showIn="@layout/activity_main"&gt;

    &lt;android.support.v7.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/recyclerView" /&gt;

&lt;/android.support.constraint.ConstraintLayout&gt;</programlisting>
</section>
<section xml:id="_menambahkan_layout_item_recyclerview">
<title>Menambahkan layout item RecyclerView</title>
<simpara>Selanjutnya buat file baru sebagai layout item-item yang akan ditampilkan di dalam RecyclerView. Klik kanan di foler <emphasis role="strong">res&gt;layout&gt;New&gt;Layout resource file</emphasis>. Beri nama <literal>country.xml</literal>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="chapters/images/recyclerview/1.png"/>
</imageobject>
<textobject><phrase>1.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Kemudian isi dengan kode berikut:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"&gt;

    &lt;ImageView
        android:id="@+id/country_image"
        android:layout_width="60dp"
        android:layout_height="60dp"
        android:layout_marginStart="8dp"
        android:layout_marginTop="8dp"
        android:src="@drawable/indonesia"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" /&gt;

    &lt;TextView
        android:id="@+id/country_capital_text"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginEnd="8dp"
        android:layout_marginStart="8dp"
        tools:text="Jakarta"
        style="@style/TextAppearance.AppCompat.Title"
        app:layout_constraintBottom_toBottomOf="@+id/country_image"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@+id/country_image"
        app:layout_constraintTop_toTopOf="@+id/country_image" /&gt;

&lt;/android.support.constraint.ConstraintLayout&gt;</programlisting>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="chapters/images/recyclerview/2.png"/>
</imageobject>
<textobject><phrase>2.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Bendera Indonesia bisa kamu unduh di <link xlink:href="http://flags.fmcdn.net/data/flags/w580/id.png">http://flags.fmcdn.net/data/flags/w580/id.png</link>. Simpan di folder <emphasis role="strong">res&gt;drawable</emphasis> dengan nama indonesia.png.</simpara>
</section>
<section xml:id="_membuat_kelas_model_pojo">
<title>Membuat kelas model (POJO)</title>
<simpara>Setelah kita mendesain layout untuk item di dalam RecyclerView, kita perlu membuat sebuah kelas yang merepresentasikan sebuah data. Kumpulan data inilah yang akan ditampilkan oleh si RecyclerView.</simpara>
<simpara>Buat file Java baru dan beri nama <literal>Country.java</literal>.</simpara>
<programlisting language="java" linenumbering="unnumbered">public class Country {
    String name, image;

    public Country() {

    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }
}</programlisting>
<note>
<title>Tentang pembuatan kelas model (POJO)</title>
<simpara>Setiap membuat kelas model, cukup tuliskan field-nya saja (dalam model di atas adalah <literal>String name, image</literal>). Untuk kode sisanya lakukan secara otomatis lewat menu <emphasis role="strong">Generate&gt;Constructor&gt;Select None</emphasis> dan <emphasis role="strong">Generate&gt;Getter and Setter</emphasis>. Menu <emphasis role="strong">Generate</emphasis> bisa dilihat dengan klik kanan atau ALT+INSERT.</simpara>
</note>
</section>
<section xml:id="_membuat_adapter_recyclerview">
<title>Membuat Adapter RecyclerView</title>
<simpara>Selanjutnya, buat sebuah kelas Java baru dan beri nama <literal>CountryListAdapter</literal> yang meng-extends <literal>RecyclerView.Adapter</literal>.</simpara>
<programlisting language="java" linenumbering="unnumbered">public class CountryListAdapter extends RecyclerView.Adapter&lt;CountryListAdapter.CountryViewHolder&gt; {
}</programlisting>
</section>
<section xml:id="_membuat_viewholder">
<title>Membuat ViewHolder</title>
<simpara>Setelah itu, buat kelas CountryViewHolder di dalam kelas CountryListAdapter (<literal>CountryListAdapter.CountryViewHolder</literal> maksudnya kita memanggil kelas CountryViewHolder yang berada di dalam <literal>CountryListAdapter</literal>).</simpara>
<programlisting language="java" linenumbering="unnumbered">public class CountryListAdapter extends RecyclerView.Adapter&lt;CountryListAdapter.CountryViewHolder&gt; {

    class CountryViewHolder extends RecyclerView.ViewHolder {
        ImageView countryImageView; <co xml:id="CO2-1"/>
        TextView capitalTextView; <co xml:id="CO2-2"/>

        public CountryViewHolder(@NonNull View itemView) {
            super(itemView);

            countryImageView = itemView.findViewById(R.id.country_image); <co xml:id="CO2-3"/>
            capitalTextView = itemView.findViewById(R.id.country_capital_text); <co xml:id="CO2-4"/>
        }
    }

}</programlisting>
<calloutlist>
<callout arearefs="CO2-3">
<para>Deklarasi objek ImageView yang ada di <literal>country.xml</literal></para>
</callout>
<callout arearefs="CO2-4">
<para>Deklarasi objek TextView yang ada di <literal>country.xml</literal></para>
</callout>
</calloutlist>
<note>
<title>Selesaikan dulu ViewHolder</title>
<simpara>Untuk mempermudah proses pembuatan adapter RecyclerView, biasakan untuk
menyelesaikan ViewHolder sebelum melanjutkan ke tahap berikutnya.
Menyelesaikan ViewHolder akan sangat membantu proses sesudahnya.</simpara>
</note>
</section>
<section xml:id="_membuat_list_item">
<title>Membuat list item</title>
<simpara>Sebuah adapter perlu memiliki list yang berisi kumpulan data yang ingin ditampilkan. Mari kita deklarasi objek list tersebut.</simpara>
<programlisting language="java" linenumbering="unnumbered">public class CountryListAdapter extends RecyclerView.Adapter&lt;CountryListAdapter.CountryViewHolder&gt; {

    List&lt;Country&gt; countries = new ArrayList&lt;&gt;(); <co xml:id="CO3-1"/>

    public void setCountries(List&lt;Country&gt; countries) { <co xml:id="CO3-2"/>
        this.countries = countries;
    }

    // ... kode lain disembunyikan
}</programlisting>
<calloutlist>
<callout arearefs="CO3-1">
<para>Deklarasi objek list item Country</para>
</callout>
<callout arearefs="CO3-2">
<para>Method ini berfungsi untuk mengisi list <literal>countries</literal> dari luar kelas CountryListAdapter</para>
</callout>
</calloutlist>
</section>
<section xml:id="_implementasi_method_wajib_recyclerview_adapter">
<title>Implementasi method wajib RecyclerView.Adapter</title>
<simpara>Sebuah kelas yang meng-extends  RecyclerView.Adapter wajib memiliki tiga method <literal>getItemCount</literal>, <literal>onCreateViewHolder</literal>, dan <literal>onBindViewHolder</literal>. Tiga method ini bisa ditulis secara otomatis menggunakan auto complete milik Android Studio. Klik di baris deklarasi kelas <literal>CountryListAdapter</literal> lalu tekan tombol ALT+ENTER di keyboard untuk menampilkan kotak dialog berikut.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="chapters/images/recyclerview/3.png"/>
</imageobject>
<textobject><phrase>3.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Pilih <emphasis role="strong">Implement methods</emphasis>. Akan muncul sebuah kotak dialog baru. Pilih ketiga method yang ada dan klik <emphasis role="strong">OK</emphasis>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="chapters/images/recyclerview/4.png"/>
</imageobject>
<textobject><phrase>4.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Sekarang kelas <literal>CountryListAdapter</literal> menjadi:</simpara>
<programlisting language="java" linenumbering="unnumbered">public class CountryListAdapter extends RecyclerView.Adapter&lt;CountryListAdapter.CountryViewHolder&gt; {

    List&lt;Country&gt; countries = new ArrayList&lt;&gt;();

    public void setCountries(List&lt;Country&gt; countries) {
        this.countries = countries;
    }

    @NonNull
    @Override
    public CountryViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
        return null;
    }

    @Override
    public void onBindViewHolder(@NonNull CountryViewHolder countryViewHolder, int i) {

    }

    @Override
    public int getItemCount() {
        return 0;
    }

    class CountryViewHolder extends RecyclerView.ViewHolder {
        ImageView countryImageView;
        TextView capitalTextView;

        public CountryViewHolder(@NonNull View itemView) {
            super(itemView);

            countryImageView = itemView.findViewById(R.id.country_image);
            capitalTextView = itemView.findViewById(R.id.country_capital_text);
        }
    }

}</programlisting>
<section xml:id="_implementasi_getitemcount">
<title>Implementasi getItemCount</title>
<simpara>Method getItemCount akan mengembalikan jumlah data yang akan ditampilkan di RecyclerView. Untuk lebih amannya, kita akan mengambil jumlah data yang terdapat di dalam objek <literal>countries</literal> secara otomatis. Setial objek <literal>List</literal> memiliki method <literal>size</literal> yang bisa menghitung jumlah datanya secara otomatis.</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
public int getItemCount() {
    return countries.size();
}</programlisting>
</section>
<section xml:id="_implementasi_oncreateviewholder">
<title>Implementasi onCreateViewHolder</title>
<simpara>Method onCreateViewHolder berfungsi untuk membuat objek view dengan membaca layout <literal>country.xml</literal> yang kemudian bisa dipakai dalam proses inisiasi (<literal>findViewById</literal>) yang ada di dalam CountryViewHolder.</simpara>
<programlisting language="java" linenumbering="unnumbered">@NonNull
@Override
public CountryViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
    View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.country, viewGroup, false);
    return new CountryViewHolder(view);
}</programlisting>
</section>
<section xml:id="_implementasi_onbindviewholder">
<title>Implementasi onBindViewHolder</title>
<simpara>Method onBindViewHolder akan dipanggil sebanyak jumlah data yang terdapat di dalam list <literal>countries</literal>. Method ini memiliki parameter bernama <literal>i</literal> (di beberapa versi Android Studio diberi nama <literal>posisition</literal> dan sesungguhnya boleh memiliki nama apapun, bahkan bisa diganti). Parameter <literal>i</literal> akan bernilai 0 hingga jumlah yang dikembalikan oleh method <literal>getItemCount</literal> yang dalam kasus ini merupakan jumlah list <literal>countries</literal>. Parameter tersebut bisa dimanfaatkan untuk mengambil isi list <literal>countries</literal> satu persatu bersadarkan nomor elemennya.</simpara>
<simpara>Setiap objek yang diambil dari dalam list kemudian bisa dipakai untuk mengisi layout <literal>country.xml</literal> berdasarkan isi masing-masing data.</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
public void onBindViewHolder(@NonNull CountryViewHolder countryViewHolder, int i) {
    Country country = countries.get(i); <co xml:id="CO4-1"/>

    countryViewHolder.capitalTextView.setText(country.getName()); <co xml:id="CO4-2"/>
    Picasso.get().load(country.getImage()).into(countryViewHolder.countryImageView); <co xml:id="CO4-3"/>
}</programlisting>
<calloutlist>
<callout arearefs="CO4-1">
<para>Ambil salah satu dari dari dalam list berdasarkan posisi</para>
</callout>
<callout arearefs="CO4-2">
<para>Mengisi nama salah satu data ke item layout</para>
</callout>
<callout arearefs="CO4-3">
<para>Menampilkan gambar dari URL menggunakan Picasso.</para>
</callout>
</calloutlist>
<simpara>Pengisian data negara akan kita lakukan di tahap selanjutnya.</simpara>
</section>
</section>
<section xml:id="_inisialisasi_recyclerview_adapter_dan_data">
<title>Inisialisasi RecyclerView, Adapter, dan data</title>
<simpara>Setelah selesai membuat adapter, sekarang mari lakukan inisialisasi data, Adapter, dan RecyclerView-nya. Deklarasikan tiga objek untuk RecyclerView, CountryListAdapter dan List&lt;Country&gt; seperti berikut ini.</simpara>
<programlisting language="java" linenumbering="unnumbered">public class MainActivity extends AppCompatActivity {

    RecyclerView recyclerView;
    CountryListAdapter adapter;

    List&lt;Country&gt; countryList = new ArrayList&lt;&gt;();

    // ... kode lain di sembunyikan
}</programlisting>
<simpara>Setelah melakukan deklarasi tiga objek di atas, buat sebuah method baru bernama <literal>insertDummyData</literal> untuk menambahkan data ke <literal>countryList</literal>.</simpara>
<programlisting language="java" linenumbering="unnumbered">private void insertDummyData() {
    Country indonesia = new Country();
    indonesia.setName("Indonesia");
    indonesia.setImage("http://flags.fmcdn.net/data/flags/w580/id.png");
    countryList.add(indonesia);

    Country italy = new Country();
    italy.setName("Italy");
    italy.setImage("http://flags.fmcdn.net/data/flags/w580/it.png");
    countryList.add(italy);

    Country japan = new Country();
    japan.setName("Japan");
    japan.setImage("http://flags.fmcdn.net/data/flags/w580/jp.png");
    countryList.add(japan);
}</programlisting>
<simpara>Berikutnya, lakukan inisialisasi RecyclerView dan Adapter.</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
    setSupportActionBar(toolbar);

    FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
    fab.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View view) {
            Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                    .setAction("Action", null).show();
        }
    });

    recyclerView = findViewById(R.id.recyclerView); <co xml:id="CO5-1"/>
    adapter = new CountryListAdapter(); <co xml:id="CO5-2"/>
    recyclerView.setAdapter(adapter); <co xml:id="CO5-3"/>
    recyclerView.setLayoutManager(new LinearLayoutManager(this)); <co xml:id="CO5-4"/>

    insertDummyData(); <co xml:id="CO5-5"/>

    adapter.setCountries(countryList); <co xml:id="CO5-6"/>
    adapter.notifyDataSetChanged(); <co xml:id="CO5-7"/>
}</programlisting>
<calloutlist>
<callout arearefs="CO5-1">
<para>Inisialisasi RecyclerView, R.id.recyclerView adalah id komponen RecyclerView di <literal>content_main.xml</literal></para>
</callout>
<callout arearefs="CO5-2">
<para>Inisialisasi objek adapter</para>
</callout>
<callout arearefs="CO5-3">
<para>Memasangkan RecyclerView dengan sebuah Adapter. RecyclerView sesungguhnya adalah <emphasis>dumb view</emphasis>. Ia tidak tahu apa-apa atas data yang ia tampilkan, semua itu diatur oleh sebuah Adapter.</para>
</callout>
<callout arearefs="CO5-4">
<para>Mengatur bagaimana item-item di dalam RecyclerView, apakah berbentuk list, grid, atau staggered grid. LayoutManager akan di bahas di subbab mendatang.</para>
</callout>
<callout arearefs="CO5-5">
<para>Mengisi objek <literal>countryList</literal></para>
</callout>
<callout arearefs="CO5-6">
<para>Menyalin isi <literal>countryList</literal> di MainActivity ke dalam <literal>countries</literal> di <literal>CountryListAdapter</literal>.</para>
</callout>
<callout arearefs="CO5-7">
<para>Memberitahu adapter bahwa ada perubahan data sehingga ia harus merefresh datanya.</para>
</callout>
</calloutlist>
<simpara>Pada contoh di atas, kita memanggil <literal>notifyDataSetChanged</literal> dari luar Adapter. Kita juga bisa memanggil notifyDataSetChanged dari dalam Adapter. Perhatikan kode berikut:</simpara>
<programlisting language="java" linenumbering="unnumbered">// di dalam CountryListAdapter
public void setCountries(List&lt;Country&gt; countries) {
    this.countries = countries;
    notifyDataSetChanged();
}

// di dalam MainActivity tidak perlu memanggil adapter.notifyDataSetChanged
// karena sudah dipanggil langsung saat mengirimkan data lewat
// setCountries
adapter.setCountries(countryList);</programlisting>
<simpara>Kamu bebas untuk menggunakan cara yang pertama atau cara yang kedua, hasilnya sama saja. Selalu pilih cara yang menurutmu paling mudah dan bisa menyelesaikan permasalahan.</simpara>
<simpara>Jalankan aplikasi di emulator atau perangakt asli untuk melihat hasilnya.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="chapters/images/recyclerview/5.png"/>
</imageobject>
<textobject><phrase>5.png</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>Jika gambar tidak muncul, tambahkan permission INTERNET di AndroidManifest.xml</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="id.droidindonesia.recyclerview"&gt;

    // tambahkan baris berikut
    &lt;uses-permission android:name="android.permission.INTERNET"/&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"&gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;</programlisting>
</section>
<section xml:id="_onclicklistener_dari_dalam_adapter">
<title>OnClickListener dari dalam adapter</title>
<simpara>Seringkali ketika pengguna menyentuh salah satu item kita ingin melakukan suatu operasi. Misalnya membuat halaman baru untuk menampilkan detail, mengubah warna latar belakang, dsb. Cara paling mudah dan paling cepat untuk mengimplementasi ialah dengan membuat OnClickListener dari dalam adapter.</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
public void onBindViewHolder(@NonNull CountryViewHolder countryViewHolder, int i) {
    Country country = countries.get(i);

    countryViewHolder.capitalTextView.setText(country.getName());
    Picasso.get().load(country.getImage()).into(countryViewHolder.countryImageView);

    <co xml:id="CO6-1"/>
    countryViewHolder.itemView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            // lakukan sesuatu di sini
        }
    });
    <co xml:id="CO6-2"/>
    countryViewHolder.capitalTextView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            // lakukan sesuatu di sini
        }
    });
    <co xml:id="CO6-3"/>
    countryViewHolder.countryImageView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            // lakukan sesuatu di sini
        }
    });
}</programlisting>
<calloutlist>
<callout arearefs="CO6-1">
<para>Deteksi klik dibagian manapun di dalam layout country.xml</para>
</callout>
<callout arearefs="CO6-2">
<para>Deteksi klik hanya di teks nama negara</para>
</callout>
<callout arearefs="CO6-3">
<para>Deteksi klik hanya di bagian gambar</para>
</callout>
</calloutlist>
</section>
<section xml:id="_onclicklistener_dari_luar_adapter">
<title>OnClickListener dari luar adapter</title>
<simpara>Ada kalanya kita ingin mendeteksi klik dari luar adapter. Jika ingin mendeteksi klik di luar adapter, maka pertama buat dulu sebuah interface sebagai berikut.</simpara>
<programlisting language="java" linenumbering="unnumbered">interface OnClickListener {
    public void onItemClick(int position, Country country);
}</programlisting>
<simpara>Interface ini boleh disimpan di file terpisah atau disimpan di dalam kelas adapter. Penulis lebih sering menyimpannya di dalam kelas adapter langsung kecuali ia akan dipakai di lebih dari satu adapter. Saat dipakai oleh dari satu adapter baru akan penulis keluarkan ke file terpisah.</simpara>
<simpara>Berikutnya buat sebuah objek baru dari <literal>OnClickListener</literal> dan sebuah contructor untuk menginisialisasikannya.</simpara>
<programlisting language="java" linenumbering="unnumbered">public class CountryListAdapter extends RecyclerView.Adapter&lt;CountryListAdapter.CountryViewHolder&gt; {

    List&lt;Country&gt; countries = new ArrayList&lt;&gt;();
    OnClickListener listener;

    public CountryListAdapter(OnClickListener listener) {
        this.listener = listener;
    }

    interface OnClickListener {
        void onItemClick(int position, Country country);
        void onCapitalTextClick(int position, Country country);
        void onImageClick(int position, Country country);
    }

    // ... kode lain disembunyikan
}</programlisting>
<simpara>Berikutnya kita perbarui method <literal>onBindViewHolder</literal> menjadi:</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
public void onBindViewHolder(@NonNull CountryViewHolder countryViewHolder, final int i) {
    final Country country = countries.get(i);

    countryViewHolder.capitalTextView.setText(country.getName());
    Picasso.get().load(country.getImage()).into(countryViewHolder.countryImageView);

    countryViewHolder.itemView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            listener.onItemClick(i, country);  <co xml:id="CO7-1"/>
        }
    });

    countryViewHolder.capitalTextView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            listener.onCapitalTextClick(i, country); <co xml:id="CO7-2"/>
        }
    });

    countryViewHolder.countryImageView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            listener.onImageClick(i, country); <co xml:id="CO7-3"/>
        }
    });
}</programlisting>
<simpara>Sekarang kembali ke Activity atau Fragment dimana kita memanggil CountryListAdapter. Kelas Activity atau Fragment tersebut harus meng-implement interface OnClickListener yang ada di CountryListAdapter sebagai berikut:</simpara>
<programlisting language="java" linenumbering="unnumbered">public class MainActivity extends AppCompatActivity implements CountryListAdapter.OnClickListener {
}</programlisting>
<simpara>Karena kita menambahkan baris <literal>implements CountryListAdapter.OnClickListener</literal> maka di dalam kelas ini kita harus mengimplementasi method-method yang didefinisikan di dalam OnClickLister tadi. Implementasi method yang ada di dalam interface OnClickListener bisa dilakukan dengan ALT+ENTER lalu <emphasis role="strong">Implement methods</emphasis> atau menuliskannya langsung seperti berikut:</simpara>
<programlisting language="java" linenumbering="unnumbered">@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.menu_main, menu);
    return true;
}

@Override
public boolean onOptionsItemSelected(MenuItem item) {
    // Handle action bar item clicks here. The action bar will
    // automatically handle clicks on the Home/Up button, so long
    // as you specify a parent activity in AndroidManifest.xml.
    int id = item.getItemId();

    //noinspection SimplifiableIfStatement
    if (id == R.id.action_settings) {
        return true;
    }

    return super.onOptionsItemSelected(item);
}

<co xml:id="CO7-4"/>
@Override
public void onItemClick(int position, Country country) {
    // lakukan sesuatu saat item di klik
}
<co xml:id="CO7-5"/>
@Override
public void onCapitalTextClick(int position, Country country) {
    // lakukan sesuatu saat teks nama di klik
}
<co xml:id="CO7-6"/>
@Override
public void onImageClick(int position, Country country) {
    // lakukan sesuatu saat gambar di klik
}</programlisting>
<simpara>Berikutnya, karena tadi kita membuat sebuah constructor yang menerima <emphasis>instance</emphasis> kelas yang meng-implement <literal>CountryListAdapter.OnClickListener</literal>, maka kita perlu mengirimkan instance tersebut saat inisiasi objek adapter.</simpara>
<programlisting language="java" linenumbering="unnumbered">recyclerView = findViewById(R.id.recyclerView);
adapter = new CountryListAdapter(this); <co xml:id="CO7-7"/>
recyclerView.setAdapter(adapter);
recyclerView.setLayoutManager(new LinearLayoutManager(this));</programlisting>
<simpara>Hasil akhir kelas MainActivity menjadi:</simpara>
<programlisting language="java" linenumbering="unnumbered">public class MainActivity extends AppCompatActivity implements CountryListAdapter.OnClickListener {

    private static final String TAG = MainActivity.class.getSimpleName();
    RecyclerView recyclerView;
    CountryListAdapter adapter;

    List&lt;Country&gt; countryList = new ArrayList&lt;&gt;();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        recyclerView = findViewById(R.id.recyclerView);
        adapter = new CountryListAdapter(this);
        recyclerView.setAdapter(adapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        insertDummyData();

        adapter.setCountries(countryList);
        adapter.notifyDataSetChanged();
    }

    private void insertDummyData() {
        Country indonesia = new Country();
        indonesia.setName("Indonesia");
        indonesia.setImage("http://flags.fmcdn.net/data/flags/w580/id.png");
        countryList.add(indonesia);

        Country italy = new Country();
        italy.setName("Italy");
        italy.setImage("http://flags.fmcdn.net/data/flags/w580/it.png");
        countryList.add(italy);

        Country japan = new Country();
        japan.setName("Japan");
        japan.setImage("http://flags.fmcdn.net/data/flags/w580/jp.png");
        countryList.add(japan);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onItemClick(int position, Country country) {
        // lakukan sesuatu saat item di klik
        Log.d(TAG, "onItemClick");
    }

    @Override
    public void onCapitalTextClick(int position, Country country) {
        // lakukan sesuatu saat teks nama di klik
    }

    @Override
    public void onImageClick(int position, Country country) {
        // lakukan sesuatu saat gambar di klik
    }
}</programlisting>
</section>
</section>
</chapter>
<colophon xml:id="_colophon">
<title>Colophon</title>
<simpara>Many of the designations used by manufacturers and sellers to
distinguish their products are claimed as trademarks. Where those
designations appear in this book, and the publisher was aware of a
trademark claim, the designations have been printed with initial capital
letters or in all capitals.</simpara>
<simpara>The author and publisher have taken care in the preparation of this
book, but make no expressed or implied warranty of any kind and assume
no responsibility for errors or omissions. No liability is assumed for
incidental or consequential damages in connection with or arising out of
the use of the information or programs contained herein.</simpara>
<simpara>Copyright © 2009-2015 xyz software. All rights reserved. Written in
Switzerland. This publication is protected by copyright, and permission
must be obtained from the publisher prior to any prohibited
reproduction, storage in a retrieval system, or transmission in any form
or by any means, electronic, mechanical, photocopying, recording, or
likewise. For information regarding permissions, or discounts for bulk
purchases and special sales, please contact</simpara>
<simpara>No old-fashioned printing systems were harmed during the making of this
book.</simpara>
<simpara>First edition, January 2015.</simpara>
</colophon>
<appendix xml:id="_lampiran">
<title>Lampiran</title>
<simpara>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
occaecat cupidatat non proident, sunt in culpa qui officia deserunt
mollit anim id est laborum.</simpara>
<simpara>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
occaecat cupidatat non proident, sunt in culpa qui officia deserunt
mollit anim id est laborum.</simpara>
</appendix>
</book>